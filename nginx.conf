# HTTP 요청을 HTTPS로 리디렉션
server {
    listen 80;
    server_name www.studyo.r-e.kr;
    return 301 https://$host$request_uri;
}

# HTTPS 요청을 처리
server {
    listen 443 ssl;
    server_name www.studyo.r-e.kr;

    ssl_certificate /etc/letsencrypt/live/www.studyo.r-e.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.studyo.r-e.kr/privkey.pem;

    # 빌드된 정적 파일이 있는 디렉토리를 지정
    root /usr/share/nginx/html;
    index index.html index.htm;

    # React 라우팅을 위한 설정
    # 모든 요청을 index.html로 전달하여 클라이언트 측 라우팅이 동작하도록 함
    location / {
        try_files $uri $uri/ /index.html;
    }
}# HTTP 요청을 HTTPS로 리디렉션
server {
    listen 80;
    server_name www.studyo.r-e.kr;
    return 301 https://$host$request_uri;
}

# HTTPS 요청을 처리
server {
    listen 443 ssl;
    server_name www.studyo.r-e.kr;

    ssl_certificate /etc/letsencrypt/live/www.studyo.r-e.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.studyo.r-e.kr/privkey.pem;

    # 빌드된 정적 파일이 있는 디렉토리를 지정
    root /usr/share/nginx/html;
    index index.html index.htm;

    # React 라우팅을 위한 설정
    # 모든 요청을 index.html로 전달하여 클라이언트 측 라우팅이 동작하도록 함
    location / {
        try_files $uri $uri/ /index.html;
    }

    # API 요청을 tjspring 컨테이너로 전달
    # /api로 시작하는 모든 요청을 프록시
    location /api/ {
        # Spring Boot 앱이 실행되는 포트(8081)로 연결
        proxy_pass http://localhost:8081; 
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
