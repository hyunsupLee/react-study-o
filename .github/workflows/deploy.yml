name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      reason:
        description: "배포 사유"
        required: false
        default: "React studyo & SpringBoot 배포"

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      # 코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v3

      # Docker Hub 로그인
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Docker 이미지 빌드 (nginx.conf 변경사항 포함)
      - name: Build Docker Images
        run: |
          docker compose -f docker-compose.yml build --no-cache

      # Docker 이미지 Push
      - name: Push Docker Images
        run: |
          docker compose -f docker-compose.yml push

      # EC2 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /home/ubuntu

            # .env 파일 생성
            cat > .env <<EOF
            DB_URL=${{ secrets.DB_URL }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            EOF

            # 애플리케이션 컨테이너만 재시작 (DB 완전 보존)
            # 기존 애플리케이션 컨테이너 중지 및 제거
            docker stop tjspring studyo 2>/dev/null || true
            docker rm -f tjspring studyo 2>/dev/null || true

            # 기존 이미지 제거 (새 이미지 강제 다운로드를 위해)
            docker rmi obama1004/studyo:latest 2>/dev/null || true
            docker rmi obama1004/tjspring:latest 2>/dev/null || true

            # 최신 이미지 다운로드
            docker compose pull tjspring studyo

            # 애플리케이션 컨테이너만 개별 실행 (ora 건드리지 않음)
            docker compose up -d --no-recreate --no-deps tjspring studyo
