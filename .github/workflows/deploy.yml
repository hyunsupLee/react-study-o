name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      reason:
        description: "배포 사유"
        required: false
        default: "React studyo & SpringBoot 배포"

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      # 코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v3

      # Docker Hub 로그인
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Docker 이미지 빌드 & push
      - name: Build & Push Docker Images
        run: |
          docker compose -f docker-compose.yml build --no-cache
          GIT_SHA=${GITHUB_SHA::7}
          docker tag obama1004/studyo:latest obama1004/studyo:$GIT_SHA
          docker tag obama1004/tjspring:latest obama1004/tjspring:$GIT_SHA
          docker compose -f docker-compose.yml push
          docker push obama1004/studyo:$GIT_SHA
          docker push obama1004/tjspring:$GIT_SHA

      # EC2 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /home/ubuntu
            # .env 파일 생성
            cat > .env <<EOF
            DB_URL=${DB_URL}
            DB_USERNAME=${DB_USERNAME}
            DB_PASSWORD=${DB_PASSWORD}
            AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            AWS_REGION=${AWS_REGION}
            EOF

            # 최신 이미지 pull 및 실행
            docker compose pull
            docker compose up -d
